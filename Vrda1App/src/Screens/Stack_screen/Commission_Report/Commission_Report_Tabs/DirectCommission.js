import React, {useEffect, useState} from "react";
import {Text, View, SafeAreaView, TouchableOpacity, FlatList, RefreshControl} from "react-native";
import Colors from "../../../../Style_Sheet/Colors";
import EvilIcons from "react-native-vector-icons/EvilIcons";
import AntDesign from "react-native-vector-icons/AntDesign";
import DoubleText from "../../../../utilis/DoubleText";
import {getcommissiondirect} from "../../../../utilis/Api/Api_controller";
import Toast from "react-native-simple-toast";
import Dialogs from "../../../../utilis/Dialog";
import Loader from "../../../../utilis/Loader";

const DirectCommission = () => {
    const [visible, setVisible] = useState(false);
    const [isloading,setLoading]=useState(false);
    const [refreshing,setRefreshing]=useState(false);
    const [apiData,setApiData]=useState("");
    const [res,setRes]=useState("");
    const [receiver,setReceiver]=useState("");
    const [pin,setPin]=useState("");

    useEffect(async ()=>{
        await getData();
    },[])

    const getData=async ()=>{
        setLoading(true)
        let response = await getcommissiondirect();
        if (response !== "Error") {
            if (response.data.status === true) {
                setApiData(response.data.data);
                setRefreshing(!refreshing)
                setLoading(false);
            }else {
                Toast.show("Something Went Wrong !", Toast.LONG);
                setLoading(false);
            }
        }else {
            Toast.show("Network Error: There is something wrong!", Toast.LONG);
            setLoading(false);
        }
    }
    const onRefresh = async () => {
        await getData();
    }
    const renderItem=({item})=>(
        <TouchableOpacity onPress={()=>{setVisible(true),setRes(item)}} style={{height:110,width:"46.9%", backgroundColor: Colors.secondary, borderColor: Colors.white, borderRadius: 10, borderBottomWidth: 2, padding: 10,margin:"1.5%" }}>
            <Text style={{ fontSize: 14, color: Colors.white }}>{item.pin_code}</Text>
            <Text style={{ fontSize: 14, color: Colors.white }}>Total ({parseFloat(item.total).toFixed(1)})</Text>
            <Text style={{ fontSize: 14, color: Colors.white }}>Status ({item.status})</Text>
            <Text style={{ fontSize: 13, color: Colors.lightgray, flex: 1, }}>Activity Date: {item.created_at}</Text>
        </TouchableOpacity>
    )
    return (
        <SafeAreaView style={{flex:1}}>
            {apiData?null:
            <Loader animating={isloading}/>}
            <FlatList
                data={apiData}
                renderItem={renderItem}
                numColumns={2}
                style={{ flex: 1 }}
                contentContainerStyle={{ marginVertical: 5 }}
                refreshControl={
                    <RefreshControl
                        refreshing={false}
                        onRefresh={onRefresh} />
                }
            />
            <Dialogs visible={visible} onPress={()=>{setVisible(false)}} title={"Description"}>
                <View style={{backgroundColor:"rgba(61,59,59,0.24)",borderRadius:10}}>

                <Text style={{fontSize:13,paddingHorizontal:10 }}>Pin Code = {res ? res.pin_code:"Not Available"}</Text>
                <Text style={{fontSize:13,paddingHorizontal:10 }}>Pin Package = {res ? res.package_name:"Not Available"}</Text>
                <Text style={{fontSize:13,paddingHorizontal:10 }}>Pin Package Price = {res ? res.package_price:"Not Available"}</Text>
                <Text style={{fontSize:13,paddingHorizontal:10 }}>Pin Package BV = {res ? res.package_bv:"Not Available"}</Text>
                <Text style={{fontSize:13,paddingHorizontal:10 }}>Generated By = {res ? res.generated_by:"Not Available"}</Text>
                </View>
                <DoubleText text1={"Ref.Code"} text2={res ? res.pin_code : "Not Available"}/>
                <DoubleText text1={"Receiver"} text2={res ? res.user : "Not Available"}/>
                <DoubleText text1={"Generator"} text2={res ? res.fromUser : "Not Available"}/>
                <DoubleText text1={"Side"} text2={res ? res.side:"Not Available"}/>
                <DoubleText text1={"Type"} text2={res ? res.type:"Not Available"}/>
                <DoubleText text1={"Amount"} text2={res ? res.total:"Not Available"}/>
                <DoubleText text1={"Status"} text2={res ? res.status:"Not Available"}/>
                <DoubleText text1={"Closing"} text2={res.closing_date?res.closing_date.slice(0,10):"Not Available"}/>
                <DoubleText text1={""} text2={res.closing_date?res.closing_date.slice(11,19):"Not Available"}/>
                <DoubleText text1={"Date"} text2={res.created_at?res.created_at.slice(0,10):"Not Available"}/>
                <DoubleText text1={""} text2={res.created_at?res.created_at.slice(11,19):"Not Available"}/>

            </Dialogs>
        </SafeAreaView>
    )
}
export default DirectCommission;
